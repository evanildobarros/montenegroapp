{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}

    /**
     * Recover Password method
     *
     * @return \Cake\Http\Response|null
     */
    public function recoverpassword()
    {
        $this->viewBuilder()->setLayout('login');

        if ($this->getRequest()->is('post')) {
            $user = $this->Users
                ->find()
                ->where([
                    'username' => $this->getRequest()->getData('username')
                ])
                ->first();
            if (!empty($user)) {
                $conn = $this->Users->getConnection();
                try {
                    $conn->begin();
                    $user->hash = Security::hash($user->username . time(), 'sha256', true);
                    $this->Users->saveOrFail($user);
                    $mail = new Email('default');
                    $mail->setEmailFormat('html')
                        ->setTemplate('Winsite.recoverpassword')
                        ->setViewVars([
                            'user' => $user,
                            'link' => Router::url(['controller' => 'users', 'action' => 'resetpassword', $user->hash], true)
                        ])
                        ->setTo($user->username)
                        ->setSubject('Recuperação de senha')
                        ->send();
                    $conn->commit();
                    $this->Flash->success(__('Aguarde em instantes você receberá um e-mail para redefinação de senha.'));

                    return $this->redirect(['action' => 'login']);
                } catch (\Exception $e) {
                    $conn->rollback();
                    $this->log($e->getMessage(), 'error');
                    $this->Flash->error(__('Por favor, tente novamente.'));
                }
            } else {
                $this->Flash->error(__('Usuário não encontrado!'));
            }
        }
    }
