{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}


    /**
     *  Reset password method
     *
     * @param string $hash
     * @return \Cake\Http\Response|null
     */
    public function resetpassword($hash)
    {
        $this->viewBuilder()->setLayout('login');

        if (empty($hash)) {
            $this->Flash->error(__('Usuário inválido!'));

            return $this->redirect(['action' => 'login']);
        }
        $this->viewBuilder()->setLayout('login');
        $user = $this->Users->find()
            ->where(['hash' => $hash])
            ->first();
        if (empty($user)) {
            $this->Flash->error(__('Usuário não encontrado!'));

            return $this->redirect(['action' => 'login']);
        }
        if ($this->getRequest()->is(['patch', 'post', 'put'])) {
            $conn = $this->Users->getConnection();
            try {
                $conn->begin();
                $user = $this->Users->patchEntity($user, $this->getRequest()->getData());
                $user->hash = null;
                $this->Users->saveOrFail($user);
                $conn->commit();
                $this->Flash->success(__('Senha alterada com sucesso.'));

                return $this->redirect(['action' => 'login']);
            } catch (\Exception $e) {
                $conn->rollback();
                $this->log($e->getMessage(), 'error');
                $this->Flash->error(__('Não foi possível alterar sua senha. Por favor, tente novamente.'));
            }
        }

        $this->set(compact('user'));
        $this->set('_serialize', ['user']);
    }
