{#
/**
 * Controller bake template file
 *
 * Allows templating of Controllers generated from bake.
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
declare(strict_types=1);

namespace {{ namespace }}\Controller{{ prefix }};

use Cake\Database\Expression\QueryExpression;
use App\Model\Entity\{{ entityClassName }};
{% if name == 'Users' %}
use Cake\Http\Exception\BadRequestException;
use Cake\Utility\Security;
use Cake\Mailer\Email;
use Cake\Routing\Router;
{% endif %}

/**
 * {{ name }} Controller
 *
{% if defaultModel %}
 * @property \{{ defaultModel }} ${{ name }}
{% endif %}

{%- for component in components %}
{% set classInfo = Bake.classInfo(component, 'Controller/Component', 'Component') %}
 * @property {{ classInfo.fqn }} ${{ classInfo.name }}
{% endfor %}
 * @property \Search\Controller\Component\SearchComponent $Search{{ "\n" }}
{%- if 'index' in actions %}
 * @method \{{ namespace }}\Model\Entity\{{ entityClassName }}[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
{% endif %}
 */
class {{ name }}Controller extends AppController
{

    /**
     * Initialize controller
     *
     * @return void
     * @throws \Exception
     */
    public function initialize(): void
    {
        parent::initialize();

{% for component in components %}
        $this->loadComponent('{{ component }}');
{% endfor %}
        $this->loadComponent('Search.Search', [
            'actions' => [
                'index',
            ],
        ]);
{% if helpers %}
        $this->viewBuilder()->setHelpers([{{ Bake.stringifyList(helpers, {'indent': false})|raw }}]);
{% endif %}
    }
{% if actions|length %}{{ "\n" }}{% endif %}

{%- for action in actions %}
{% if loop.index > 1 %}{{ "\n" }}{% endif %}
    {{- element('Bake.Controller/' ~ action) -}}
{% endfor %}
    {{- element('Bake.Controller/deleteAll') -}}
    {{- element('Bake.Controller/toggle') -}}
{% if name == 'Users' %}
    {{- element('Bake.Controller/login') -}}
    {{- element('Bake.Controller/logout') -}}
    {{- element('Bake.Controller/recoverpassword') -}}
    {{- element('Bake.Controller/resetpassword') -}}
    {{- element('Bake.Controller/dashboard') -}}
{% endif %}
}
